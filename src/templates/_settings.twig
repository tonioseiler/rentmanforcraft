{# @var plugin \furbo\rentmanforcraft\RentmanForCraft #}
{# @var settings \furbo\rentmanforcraft\models\Settings #}

{% import '_includes/forms.twig' as forms %}

{# The title of this CP section #}
{% set title = craft.rentman.cpTitle~' - Settings' %}

{% do view.registerAssetBundle("furbo\\rentmanforcraft\\web\\assets\\rentmanforcraft\\RentmanForCraftCPAsset") %}

{# The content of the CP Section #}
{% block content %}


    <header id="content-header" class="pane-header">
        <div id="tabs" class="pane-tabs">
            <div class="" role="tablist" aria-label="Primary fields">
                <a class="sel" href="#fields" tabindex="0" role="tab" data-id="settings-tab-main-settings" aria-selected="true">
                    <span class="tab-label">
                        Main settings
                    </span>
                </a>
                <a href="#translations" tabindex="-1" role="tab" data-id="settings-tab-translations" aria-selected="false">
                    <span class="tab-label">
                        Whitelabel
                    </span>
                </a>
            </div>

        </div>
    </header>




    <div id="tab-main-settings" data-id="tab-main-settings" role="tabpanel" class="tab">

        <div id="settings">

            {{ forms.textField({
                label: 'Api URL',
                instructions: '',
                id: 'apiUrl',
                name: 'apiUrl',
                value: settings['apiUrl']}) }}

            {{ forms.textField({
                label: 'Api Key',
                instructions: '',
                id: 'apiKey',
                name: 'apiKey',
                value: settings['apiKey']}) }}

            <div class="field">
                <div class="heading">
                    <label>Automatically send projects to rentman</label>
                </div>

                {{ forms.lightswitch({
                    label: 'enabled',
                    instructions: '',
                    id: 'autoSubmitProjects',
                    name: 'autoSubmitProjects',
                    on: (settings['autoSubmitProjects'] ?? false) ? true : false,

                }) }}



                {# forms.lightswitch({
                    label: 'enabled',
                    type: 'checkbox',
                    name: 'autoSubmitProjects',
                    on: (settings['autoSubmitProjects'] ?? false) ? true : false,
                }) #}


                <hr/>

                {% set siteRows = [] %}

                {% for site in craft.app.sites.getAllSites() %}
                    {% set siteSettings = settings['productRoutes'][site.handle] ?? null %}
                    {% set siteRows = siteRows|merge({
                        (site.handle): {
                            heading: site.name|t('site')|e,
                            uriFormat: {
                                value: siteSettings ? siteSettings.uriFormat,
                            },
                            template: {
                                value: siteSettings ? siteSettings.template,
                            },
                        }|filter
                    }) %}
                {% endfor %}

                {{ forms.editableTableField({
                    label: "Product URLS"|t('app'),
                    instructions: "Define URL and template to be used for products."|t('app'),
                    id: 'productRoutes',
                    name: 'productRoutes',
                    cols: {
                        heading: {
                            type: 'heading',
                            heading: "Site"|t('app'),
                            thin: true
                        },
                        uriFormat: {
                            type: 'singleline',
                            heading: "Entry URI Format"|t('app'),
                            info: "What entry URIs should look like for the site. Leave blank if entries don’t have URLs."|t('app'),
                            placeholder: 'Leave blank if entries don’t have URLs'|t('app'),
                            code: true,
                            width: 500,
                            class: ['type-channel', 'type-structure']|filter
                        },
                        template: {
                            type: 'template',
                            heading: "Template"|t('app'),
                            info: "Which template should be loaded when an entry’s URL is requested."|t('app'),
                            code: true
                        }
                    }|filter,
                    rows: siteRows,
                    fullWidth: true,
                    allowAdd: false,
                    allowDelete: false,
                    allowReorder: false
                }) }}

                <hr/>

                {% set siteRows = [] %}

                {% for site in craft.app.sites.getAllSites() %}
                    {% set siteSettings = settings['categoryRoutes'][site.handle] ?? null %}
                    {% set siteRows = siteRows|merge({
                        (site.handle): {
                            heading: site.name|t('site')|e,
                            uriFormat: {
                                value: siteSettings ? siteSettings.uriFormat,
                            },
                            template: {
                                value: siteSettings ? siteSettings.template,
                            },
                        }|filter
                    }) %}
                {% endfor %}

                {{ forms.editableTableField({
                    label: "Category URLS"|t('app'),
                    instructions: "Define URLS and template to be used to categories."|t('app'),
                    id: 'categoryRoutes',
                    name: 'categoryRoutes',
                    cols: {
                        heading: {
                            type: 'heading',
                            heading: "Site"|t('app'),
                            thin: true
                        },
                        uriFormat: {
                            type: 'singleline',
                            heading: "Entry URI Format"|t('app'),
                            info: "What entry URIs should look like for the site. Leave blank if entries don’t have URLs."|t('app'),
                            placeholder: 'Leave blank if entries don’t have URLs'|t('app'),
                            code: true,
                            width: 500,
                            class: ['type-channel', 'type-structure']|filter
                        },
                        template: {
                            type: 'template',
                            heading: "Template"|t('app'),
                            info: "Which template should be loaded when an entry’s URL is requested."|t('app'),
                            code: true
                        }
                    }|filter,
                    rows: siteRows,
                    fullWidth: true,
                    allowAdd: false,
                    allowDelete: false,
                    allowReorder: false
                }) }}

                <hr/>

                {% set siteRows = [] %}

                {% for site in craft.app.sites.getAllSites() %}
                    {% set siteSettings = settings['projectRoutes'][site.handle] ?? null %}
                    {% set siteRows = siteRows|merge({
                        (site.handle): {
                            heading: site.name|t('site')|e,
                            uriFormat: {
                                value: siteSettings ? siteSettings.uriFormat,
                            },
                            template: {
                                value: siteSettings ? siteSettings.template,
                            },
                        }|filter
                    }) %}
                {% endfor %}

                {{ forms.editableTableField({
                    label: "Project URLS"|t('app'),
                    instructions: "Define URLS and template to be used for projects."|t('app'),
                    id: 'projectRoutes',
                    name: 'projectRoutes',
                    cols: {
                        heading: {
                            type: 'heading',
                            heading: "Site"|t('app'),
                            thin: true
                        },
                        uriFormat: {
                            type: 'singleline',
                            heading: "Entry URI Format"|t('app'),
                            info: "What entry URIs should look like for the site. Leave blank if entries don’t have URLs."|t('app'),
                            placeholder: 'Leave blank if entries don’t have URLs'|t('app'),
                            code: true,
                            width: 500,
                            class: ['type-channel', 'type-structure']|filter
                        },
                        template: {
                            type: 'template',
                            heading: "Template"|t('app'),
                            info: "Which template should be loaded when an entry’s URL is requested."|t('app'),
                            code: true
                        }
                    }|filter,
                    rows: siteRows,
                    fullWidth: true,
                    allowAdd: false,
                    allowDelete: false,
                    allowReorder: false
                }) }}

                <hr/>


                {{ forms.editableTableField({
                    label: "Shooting Days Factor",
                    instructions: "",
                    id: 'shootingDaysFactor',
                    name: 'shootingDaysFactor',
                    cols: {
                        days: {
                            type: 'number',
                            heading: "Days",
                            info: "",
                            placeholder: '',
                            code: true,
                            width: 10,
                            class: ['type-channel', 'type-structure']|filter
                        },
                        factor: {
                            type: 'number',
                            heading: "Factor",
                            info: "What factor should be applied to calcualte price for x days",
                            code: true,
                            width: 10,
                        }
                    }|filter,
                    rows: settings['shootingDaysFactor'],
                    fullWidth: false,
                    allowAdd: true,
                    allowDelete: true,
                    allowReorder: true
                }) }}

                <hr/>

                {{ forms.fieldLayoutDesignerField({
                    label: "Additional fields for products"|t('app'),
                    id: 'product-fields',
                    fieldLayout: craft.app.fields.getLayoutByType(
                        'furbo\\rentmanforcraft\\elements\\Product'
                    ),
                }) }}

            </div>


        </div>
    </div>
    <div id="tab-translations" data-id="translations" role="tabpanel" class="tab hidden">

        {{ forms.textField({
            label: 'Control Panel Title',
            instructions: 'How the plugin will be called in the Control Panel',
            id: 'cpTitle',
            name: 'cpTitle',
            value: settings['cpTitle']}) }}

        <hr>

        {{ forms.textField({
            label: 'Project\'s PDF Filename',
            instructions: 'This sets the name of the selected project\'s pdf file that downloaded by the users. Note that "- #{project id}.pdf" will be added at the end of the file',
            id: 'pdfFilename',
            name: 'pdfFilename',
            value: settings['pdfFilename']}) }}

        <hr>

        {#
        {{ forms.textField({
            label: 'Project\'s PDF template',
            instructions: 'Leave empty to use the default template.',
            id: 'templateForProjectPdf',
            name: 'templateForProjectPdf',
            value: settings['templateForProjectPdf']}) }}


        {{ forms.textField({
            label: 'Project\'s PDF template',
            instructions: 'Leave empty to use the default template.',
            id: 'templateForProjectPdf',
            name: 'templateForProjectPdf',
            value: settings['templateForProjectPdf']}) }}
        #}

        {{ forms.template: {
            label: 'Project\'s PDF template',
            instructions: 'Leave empty to use the default template.',
            id: 'templateForProjectPdf',
            name: 'templateForProjectPdf',
            heading: "Template"|t('app'),
            info: "Which template should be used for the project's pdf file."|t('app'),
            code: true
        } }}


    </div>

    {% js %}
        $(document).ready(function() {
        $('#settings-tabs a span').off();

        $('#settings-tabs a span').on('click', function (e) {
        e.preventDefault();
        $('.tab').addClass('hidden');
        $('#'+ $(this).parent().data('id')).removeClass('hidden');
        $('#settings-tabs a').removeClass('sel');
        $(this).parent().addClass('sel');
        })

        });
    {% endjs %}


{% endblock %}
