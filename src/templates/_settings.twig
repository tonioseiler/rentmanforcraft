{# @var plugin \furbo\rentmanforcraft\RentmanForCraft #}
{# @var settings \furbo\rentmanforcraft\models\Settings #}

{% import '_includes/forms.twig' as forms %}

{# The title of this CP section #}
{% set title = craft.rentman.cpTitle~' - Settings' %}

{% do view.registerAssetBundle("furbo\\rentmanforcraft\\web\\assets\\rentmanforcraft\\RentmanForCraftAsset") %}

{# The content of the CP Section#}
{% block content %}
    <div id="fields">
        <div id="settings">
            {{ forms.textField({
                label: 'Control Panel Title',
                instructions: 'How the plugin will be called in the Control Panel',
                id: 'cpTitle',
                name: 'cpTitle',
                value: settings['cpTitle']})
            }}

            <hr />

            {{ forms.textField({
                label: 'Api URL',
                instructions: '',
                id: 'apiUrl',
                name: 'apiUrl',
                value: settings['apiUrl']})
            }}

            {{ forms.textField({
                label: 'Api Key',
                instructions: '',
                id: 'apiKey',
                name: 'apiKey',
                value: settings['apiKey']})
            }}

            <hr />

            {% set siteRows = [] %}

            {% for site in craft.app.sites.getAllSites() %}
                {% set siteSettings = settings['sites'][site.handle] ?? null %}
                {% set siteRows = siteRows|merge({
                    (site.handle): {
                        heading: site.name|t('site')|e,
                        uriFormat: {
                            value: siteSettings ? siteSettings.uriFormat,
                        },
                        template: {
                            value: siteSettings ? siteSettings.template,
                        },
                    }|filter
                }) %}
            {% endfor %}

            {{ forms.editableTableField({
                label: "Url's"|t('app'),
                instructions: "Define URLS and template to be used to show collection items."|t('app'),
                id: 'sites',
                name: 'sites',
                cols: {
                    heading: {
                        type: 'heading',
                        heading: "Site"|t('app'),
                        thin: true
                    },
                    uriFormat: {
                        type: 'singleline',
                        heading: "Entry URI Format"|t('app'),
                        info: "What entry URIs should look like for the site. Leave blank if entries don’t have URLs."|t('app'),
                        placeholder: 'Leave blank if entries don’t have URLs'|t('app'),
                        code: true,
                        width: 500,
                        class: ['type-channel', 'type-structure']|filter
                    },
                    template: {
                        type: 'template',
                        heading: "Template"|t('app'),
                        info: "Which template should be loaded when an entry’s URL is requested."|t('app'),
                        code: true
                    }
                }|filter,
                rows: siteRows,
                fullWidth: true,
                allowAdd: false,
                allowDelete: false,
                allowReorder: false
            }) }}

        </div>

        <hr />

        <div id="product-settings">
            {{ forms.fieldLayoutDesignerField({
                label: "Additional fields for products"|t('app'),
                id: 'test1',
                fieldLayout: craft.app.fields.getLayoutByType(
                    'furbo\\rentmanforcraft\\elements\\Product'
                ),
            }) }}
        </div>

        <hr />

        <div id="category-settings">

            {{ forms.fieldLayoutDesignerField({
                label: "Additional fields for categories"|t('app'),
                id: 'test2',
                fieldLayout: craft.app.fields.getLayoutByType(
                    'furbo\\rentmanforcraft\\elements\\Category'
                ),
            }) }}

        </div>
    </div>
{% endblock %}
